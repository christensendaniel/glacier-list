name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test-pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Hatch
      run: |
        python -m pip install --upgrade pip
        python -m pip install hatch
    
    - name: Build package
      run: hatch build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  test-build:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Install built package
      run: |
        python -m pip install --upgrade pip
        python -m pip install dist/*.whl
    
    - name: Test installation
      run: |
        python -c "import glacier_list; print(glacier_list.__version__)"
        python -c "from glacier_list import GlacierList; print('Import successful')"

  publish:
    needs: [build, test-build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main')
    environment:
      name: ${{ github.event.inputs.test-pypi == 'true' && 'test-pypi' || 'pypi' }}
      url: ${{ github.event.inputs.test-pypi == 'true' && 'https://test.pypi.org/p/glacier-list' || 'https://pypi.org/p/glacier-list' }}
    permissions:
      id-token: write  # For trusted publishing
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to Test PyPI
      if: github.event.inputs.test-pypi == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
    
    - name: Publish to PyPI
      if: github.event.inputs.test-pypi != 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true
